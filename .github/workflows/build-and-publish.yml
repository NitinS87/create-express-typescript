name: Build and Publish

on:
  release:
    types: [published, edited]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f package-lock.json ]; then
            echo "PACKAGE_MANAGER=npm" >> $GITHUB_ENV
          elif [ -f pnpm-lock.yaml ]; then
            echo "PACKAGE_MANAGER=pnpm" >> $GITHUB_ENV
          elif [ -f yarn.lock ]; then
            echo "PACKAGE_MANAGER=yarn" >> $GITHUB_ENV
          else
            echo "No supported package manager lock file found."
            exit 1
          fi

      - name: Install dependencies
        run: |
          if [ "${{ env.PACKAGE_MANAGER }}" = "npm" ]; then
            npm install
          elif [ "${{ env.PACKAGE_MANAGER }}" = "pnpm" ]; then
            npm install -g pnpm
            pnpm install
          elif [ "${{ env.PACKAGE_MANAGER }}" = "yarn" ]; then
            yarn install
          fi

      - name: Build the project
        run: |
          if [ "${{ env.PACKAGE_MANAGER }}" = "npm" ]; then
            npm run build
          elif [ "${{ env.PACKAGE_MANAGER }}" = "pnpm" ]; then
            pnpm run build
          elif [ "${{ env.PACKAGE_MANAGER }}" = "yarn" ]; then
            yarn build
          fi

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f package-lock.json ]; then
            echo "PACKAGE_MANAGER=npm" >> $GITHUB_ENV
          elif [ -f pnpm-lock.yaml ]; then
            echo "PACKAGE_MANAGER=pnpm" >> $GITHUB_ENV
          elif [ -f yarn.lock ]; then
            echo "PACKAGE_MANAGER=yarn" >> $GITHUB_ENV
          else
            echo "No supported package manager lock file found."
            exit 1
          fi

      - name: Install dependencies
        run: |
          if [ "${{ env.PACKAGE_MANAGER }}" = "npm" ]; then
            npm install
          elif [ "${{ env.PACKAGE_MANAGER }}" = "pnpm" ]; then
            npm install -g pnpm
            pnpm install
          elif [ "${{ env.PACKAGE_MANAGER }}" = "yarn" ]; then
            yarn install
          fi

      - name: Build the project
        run: |
          if [ "${{ env.PACKAGE_MANAGER }}" = "npm" ]; then
            npm run build
          elif [ "${{ env.PACKAGE_MANAGER }}" = "pnpm" ]; then
            pnpm run build
          elif [ "${{ env.PACKAGE_MANAGER }}" = "yarn" ]; then
            yarn build
          fi

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
